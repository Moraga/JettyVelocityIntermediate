
#parse("config.vm")
#parse("system.vm")
#parse("macros.vm")

#set($system.backend = $link.host.replaceAll("([^\.]+).*", "$1") + $link.path.replace("/", "."))
#set($config.channel = $link.host)
#set($config.abspath = "config/${system.backend}.vm")

## gets the config file for the request
#foreach ($i in $system.backend.split("\."))
	#if ($include.exists("commons/$config.abspath"))
		#parse($config.abspath)
		#break
	#end
	#set($config.abspath = $config.abspath.replaceAll("(.*)\.[^.]+\.vm$", "$1.vm"))
#end

## default content

#define ($body)
    #render($content.type $data)
#end

#define ($document)
    $body
#end


#set($components = [$content.type])

#set($content.components = [$content.type])

## load components
#foreach ($i in [0..99])
	#if ($i == $components.size())
        #break
    #end
	
	#set($component = $components[$i])
	
    ## versions
    #if ($config.versions.containsKey($component))
        #set($component = "$component/$config.versions[$component]")
    #end
	
	## loads the controller
	#if ($include.exists("$system.corepath/components/$component/controller.vm"))
		#parse("components/$component/controller.vm")
	#end
	
	## override
	#if ($include.exists("$system.corepath/override/$config.channel/$components[$i]/controller.vm"))
		#parse("override/$config.channel/$components[$i]/controller.vm")
	#end
	
	## default parameters
    #if ($default)
        #set($config.components[$component] = $default)
        #set($default = false)
	#else
		#set($config.components[$component] = {})
    #end
	
	## cache control
    #if ($cache > $config.cache)
        #set($config.cache = $cache)
        #set($cache = 0)
    #end
	
    ## dependencies
    #if ($require)
		#set($index = $content.components.indexOf($component))
        #foreach ($item in $require)
            #if ($components.indexOf($item) == -1 && $components.add($item))
				$content.components.add($index, $item)
				#set($index = $index + 1)
            #end
        #end
		#set($require = false)
    #end
#end

#set($components = $content.components)

#set($content.components = {})

#foreach ($item in $components)
	#set($item = $item.replace("/", "--")) ## namespace
	#evaluate("${esc.h}set($esc.d$esc.velocity('content.components')$item = $esc.d!$item)")
#end

#set($content.components.render = {})

$!document