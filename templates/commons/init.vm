
#parse("config.vm")

#set($system = {
	"corepath": "commons"
})

#set($system.backend = $link.host.replaceAll("([^\.]+).*", "$1") + $link.path.replace("/", "."))
#set($config.channel = $link.host)
#set($config.abspath = "config/${system.backend}.vm")

#foreach ($i in $system.backend.split("\."))
	#if ($include.exists("commons/$config.abspath"))
		#parse($config.abspath)
		#break
	#end
	#set($config.abspath = $config.abspath.replaceAll("(.*)\.[^.]+\.vm$", "$1.vm"))
#end

#define ($body)
    #render($content.type)
#end

#define ($document)
    $body
#end

#set($components = [$content.type])

## load components
#foreach ($i in [0..99])
    ## stops
    #if ($i == $components.size())
        #break
    #end

    #set($component = $components[$i])

    ## override

    ## versions
    #if ($config.version.get($component))
        #set($component = "$component/$config.version[$component]")
    #end

    #parse("components/$component/controller.vm")

    ## default parameters
    #if ($default)
        #set($config.components[$component] = $default)
        #set($default = false)
    #end

    ## cache control
    #if ($cache > $config.cache)
        #set($config.cache = $cache)
        #set($cache = 0)
    #end

    ## dependencies
    #if ($require)
        #foreach ($item in $require)
            #if ($components.indexOf($item) == -1)
                $components.add($components.size(), $item)
            #end
        #end
    #end
#end

#set($render-stack = [])

#macro (render $render-component $render-data $render-alias)
    #set($null = $render-stack.add($data))

    #set($data = $render-data)

    #set($null = '#set($null = $!' + $render-component + ')')

    #evaluate($null)

    #if ($render-alias)

    #else
        $null
    #end

    #set($data = $render-stack.remove($math.sub($render-stack.size(), 1)))
#end


$!document